// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
package publish

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// PublishServiceClient is the client API for PublishService service.
type PublishServiceClient interface {
	GetMethod(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	UploadExcelMethod(ctx context.Context, in *UploadExcelRequest, opts ...grpc.CallOption) (*UploadExcelResponse, error)
}

type publishServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPublishServiceClient(cc grpc.ClientConnInterface) PublishServiceClient {
	return &publishServiceClient{cc}
}

func (c *publishServiceClient) GetMethod(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/publish.publishService/getMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publishServiceClient) UploadExcelMethod(ctx context.Context, in *UploadExcelRequest, opts ...grpc.CallOption) (*UploadExcelResponse, error) {
	out := new(UploadExcelResponse)
	err := c.cc.Invoke(ctx, "/publish.publishService/uploadExcelMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}