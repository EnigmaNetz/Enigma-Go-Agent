name: Build Release Binaries

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build binaries for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.24.x']

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: get_version
        run: echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Set VERSION env
        run: echo "VERSION=${{ steps.get_version.outputs.version }}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Build binary
        shell: bash
        run: |
          mkdir -p bin
          VERSION="${{ steps.get_version.outputs.version }}"
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            GOOS=linux GOARCH=amd64 go build -o bin/enigma-agent-linux-amd64-$VERSION ./cmd/enigma-agent
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            GOOS=darwin GOARCH=amd64 go build -o bin/enigma-agent-darwin-amd64-$VERSION ./cmd/enigma-agent
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            GOOS=windows GOARCH=amd64 go build -o bin/enigma-agent-windows-amd64-$VERSION.exe ./cmd/enigma-agent
          fi

      # Only for windows-latest: install Inno Setup, build installer, upload artifact
      - name: Install Inno Setup
        if: matrix.os == 'windows-latest'
        run: choco install innosetup --no-progress
        shell: powershell

      - name: Copy binary for installer
        if: matrix.os == 'windows-latest'
        run: |
          Copy-Item -Path bin/enigma-agent-windows-amd64-${{ env.VERSION }}.exe -Destination bin/enigma-agent-windows-amd64.exe
        shell: powershell
        env:
          VERSION: ${{ steps.get_version.outputs.version }}

      - name: Build Windows Installer
        if: matrix.os == 'windows-latest'
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer/windows/enigma-agent-installer.iss
        shell: powershell

      - name: Rename installer
        if: matrix.os == 'windows-latest'
        run: |
          Rename-Item -Path installer/windows/Output/enigma-agent-installer.exe -NewName enigma-agent-installer.exe
        shell: powershell

      - name: Upload Windows Installer Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: enigma-agent-installer
          path: installer/windows/Output/enigma-agent-installer.exe

      - name: Upload installer to GitHub Release
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: installer/windows/Output/enigma-agent-installer.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries to GitHub Release (Linux/macOS)
        if: matrix.os != 'windows-latest' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: bin/enigma-agent-*-${{ steps.get_version.outputs.version }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}